set nocompatible
filetype off
filetype plugin indent on

" Vim plugins
call plug#begin('~/.vim/plugged')

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'sheerun/vim-wombat-scheme'
Plug 'scrooloose/nerdtree'
Plug 'Valloric/YouCompleteMe', {'do': 'python3 install.py --all'}
Plug 'ctrlpvim/ctrlp.vim'
Plug 'rking/ag.vim'
Plug 'https://github.com/moll/vim-node'
Plug 'https://github.com/morhetz/gruvbox'
Plug 'rust-lang/rust.vim'
Plug 'racer-rust/vim-racer'
Plug 'vim-utils/vim-man'
Plug 'hotoo/jsgf.vim'
Plug 'ajh17/VimCompletesMe'
Plug 'lyuts/vim-rtags'
Plug 'tpope/vim-fugitive'
Plug 'jacoborus/tender.vim'
Plug 'Vimjas/vim-python-pep8-indent'
Plug 'neomake/neomake'
Plug 'Yggdroot/indentLine'
Plug 'scrooloose/syntastic'
Plug 'w0rp/ale'
Plug 'jiangmiao/auto-pairs'
Plug 'tmhedberg/SimpylFold'
Plug 'dbeniamine/cheat.sh-vim'
Plug 'tpope/vim-fugitive'
Plug 'sheerun/vim-polyglot'
Plug 'ThePrimeagen/harpoon'
Plug 'nvim-lua/popup.nvim'
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim''
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}  " We recommend updating the parsers on update

call plug#end()

" Neomake config - When writing a buffer (no delay).
call neomake#configure#automake('w')

" Correct python3 file checking
function Py2()
  let g:syntastic_python_python_exec = '/usr/local/bin/python2.7'
endfunction

function Py3()
  let g:syntastic_python_python_exec = '/usr/local/bin/python3'
endfunction

call Py3() " default

" File checking
let g:syntastic_python_checkers = ['pylint']
let g:syntastic_shell_checkers = ['shellcheck']
let g:syntastic_python_flake8_exec = 'python3'
let g:syntastic_python_flake8_args = ['-m', 'flake8']

" Disable indentLine for latex
autocmd Filetype tex let g:indentLine_setConceal = 0

" Change colorscheme
colorscheme gruvbox

" Better copy and paste
set pastetoggle=<F2>

" Scroll before end
set scrolloff=3 " Keep 3 lines below and above the cursor

" Mouse and backspace
set mouse=a
set bs=2

" Rebinding <Leader> key
nnoremap <SPACE> <Nop>
let mapleader = ' '

" Copy paste into system clipboard
noremap <Leader>Y "+y
noremap <Leader>P "+p

" Speed up redraws
set lazyredraw

" Highlighting the current line and column
set cursorline
hi cursorline cterm=bold
set cursorcolumn
hi cursorcolumn ctermbg=4

" Stop being selfish Up
nnoremap <Up> gk
vnoremap <Up> gk
inoremap <Up> <Esc>gka

" Stop being selfish Down
nnoremap <Down> gj
vnoremap <Down> gj
inoremap <Down> <Esc>gja

" Moving around the windows
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Moving around the tabs
map <Leader>n <esc>:tabprevious<CR>
map <Leader>m <esc>:tabnext<CR>

" Opening and closing error tab
map <Leader>o <esc>:lopen<CR>
map <Leader>p <esc>:lclose<CR>

" Git fugitive
nmap <Leader>gs :G<CR>
nmap <Leader>gj :diffget //3<CR>
nmap <Leader>gf :diffget //2<CR>

" Map sort
vnoremap <Leader>s :sort<CR>

" Source surrent file
noremap <silent><buffer> <F9> :exec 'source '.bufname('%')<CR>

" Syntax Highlighting
syntax on

" Custom highlighting for smv files
au BufRead,BufNewFile *.smv set filetype=smvf
au! Syntax smvf source $HOME/.vim/syntax/svm.vim

" Showing line number and Length
set number

" Wrap
set wrap

" Persistent undo
set undofile
set undodir=$HOME/.vim/undo
set undolevels=1000
set undoreload=10000

" Increase size of history
set history=700

" Using spaces instead of tabs
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set expandtab

" Make search case insensitive
set hlsearch
set incsearch
set ignorecase
set smartcase

" Automatically indent text
set autoindent

" Work with utf-8
set encoding=utf-8
set fileencoding=utf-8

" Faster scrolling
set ttyfast

" Specifying line formats as unix
set fileformat=unix

" YouCompleteMe commands
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

" Go to definition or fix
nnoremap <silent> <Leader>gd :YcmCompleter GoTo<CR>
nnoremap <silent> <Leader>gf :YcmCompleter FixIt<CR>
nnoremap <silent> <Leader>nt :NERDTreeToggle <Enter>

" Tell SimpylFold to fold docstring by default
let g:SimpylFold_docstring_preview = 1

" Highlight bad spaces
highlight BadWhitespace ctermbg=red guibg=darkred
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h,*.tex,*.smv match BadWhitespace /\s\+$/

" Enable all python syntax highlights
let python_highlight_all=1

" English spell check
map <silent> <F6> "<Esc>:set spell spelllang=en_us<CR>"
map <silent> <F7> "<Esc>:set nospell<CR>"

" Change spell checker color
hi clear SpellBad
hi SpellBad cterm=underline ctermfg=green
hi clear SpellLocal
hi SpellLocal cterm=underline ctermfg=darkgreen
